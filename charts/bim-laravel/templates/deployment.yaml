apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "liblaravel.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "liblaravel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "liblaravel.selectorLabels" . | nindent 8 }}
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'bb-qa-role'
        vault.hashicorp.com/agent-inject-secret-config: 'database/creds/bb-qa-access'
        vault.hashicorp.com/agent-inject-template-config: |
          {{`{{ with secret "database/creds/bb-qa-access" }}
            export DB_USERNAME={{ .Data.username }}
            export DB_PASSWORD={{ .Data.password }}
          {{ end }}`}}
        vault.hashicorp.com/agent-inject-secret-creds: 'database/creds/bb-qa-access'
        vault.hashicorp.com/agent-inject-template-creds: |
          {{`{{ with secret "database/creds/bb-qa-access" }}
            [client]
            user="{{ .Data.username }}"
            password="{{ .Data.password }}"`}}
            host="{{ .Values.database.host }}"{{`
          {{ end }}`}}
    spec:
      serviceAccountName: bb-qa-vault-auth
      containers:
        - name: {{ required "Name Required" .Chart.Name }}
          image: "{{ required "image.registry Required" .Values.image.registry }}/{{ required "image.repository Required" .Values.image.repository }}:{{ required "image.tag Required" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [ "server:production" ]
          ports:
            - containerPort: {{ .Values.image.port }}
#          lifecycle:
#            postStart:
#              exec:
#                command: [ "/bin/sh", "source", "/vault/secrets/config" ]
##                             "/usr/bin/mysql", "<", "/docker-entrypoint-initdb.d/init.sql"]
          envFrom:
            - configMapRef:
                name: "{{ include "liblaravel.fullname" . }}-env"
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-initdb
          configMap:
            name: {{ include "liblaravel.fullname" . }}-initdb
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "liblaravel.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "liblaravel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "liblaravel.selectorLabels" . | nindent 8 }}
      annotations:
        {{- include "vault.inject" . | nindent 8 }}
        {{- include "vault.env" . | nindent 8 }}
        {{- include "vault.iam" . | nindent 8 }}
        {{- include "vault.creds" . | nindent 8 }}
        {{- include "vault.dns" . | nindent 8 }}
    spec:
      serviceAccountName: bb-{{ .Values.environment }}-vault-auth
      initContainers:
        # Init: Mix & DB
        - name: {{ required "Name Required" .Chart.Name }}-init
          image: "{{ required "image.registry Required" .Values.image.registry }}/{{ required "image.repository Required" .Values.image.repository }}:{{ required "image.tag Required" .Values.image.tag }}"
          args: [ "init:{{ .Values.environment }}" ]
          envFrom:
            - configMapRef:
                name: "{{ include "liblaravel.fullname" . }}-env"
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: {{ required "Name Required" .Chart.Name }}
          image: "{{ required "image.registry Required" .Values.image.registry }}/{{ required "image.repository Required" .Values.image.repository }}:{{ required "image.tag Required" .Values.image.tag }}"
          args: [ "server:{{ .Values.environment }}" ]
          ports:
            - containerPort: {{ .Values.image.port }}
          envFrom:
            - configMapRef:
                name: "{{ include "liblaravel.fullname" . }}-env"
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
        - name: {{ required "Name Required" .Chart.Name }}-queue
          image: "{{ required "image.registry Required" .Values.image.registry }}/{{ required "image.repository Required" .Values.image.repository }}:{{ required "image.tag Required" .Values.image.tag }}"
          args: [ "queue:{{ .Values.environment }}" ]
          envFrom:
            - configMapRef:
                name: "{{ include "liblaravel.fullname" . }}-env"
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
      volumes:
        - name: mysql-initdb
          configMap:
            name: {{ include "liblaravel.fullname" . }}-initdb